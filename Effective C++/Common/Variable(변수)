
변수(Variable)
===================================================================================================================
변수
- 데이터를 저장하기 위해 프로그램에 의해 이름을 할당받은 메모리 공간

- 데이터를 저장할 수 있는 메모리 공간

- 'const' 키워드가 있는 상수 변수 외에는 저장된 값은 변경 가능

- 선언 후 초기화를 하지 않고 해당 변수를 출력하면 쓰레기값(해당 변수의 주소에 원래 저장되어 있던 값)을 출력

- l-value

변수명 규칙
- 변수의 이름은 영문자(대소문자), 숫자, 언더바(_)로만 구성

- 변수의 이름은 숫자로 시작될 수 없음
   ex) int 9ch; => 불가능

- 변수의 이름 사이에는 공백을 포함할 수 없음
   ex) int ch qwe; => 불가능

- 변수의 이름으로 C++에서 미리 정의된 키워드(자료형 등)는 사용할 수 없음
   ex) int int; => 불가능

- 변수 이름의 길이에는 제한이 없음

- 변수의 이름이 같은 경우 '{}'안에 선언된 같은 영역의 지역변수가 우선순위가 높음
   ex) int iName = 0;

       {
	      int iName = 100;

		  iName; => 같은 영역의 지역변수를 사용, 100
	   }

	   iName; => 같은 영역의 지역변수를 사용, 0


변수의 종류
- 지역변수(Local Variable)
   - '{}'안에 선언된 변수(한 지역 내에서만 사용할 수 있는 변수)
   
   - 함수 호출 시 스택 영역에 메모리 할당
   
   - 함수 종료 시 스택 영역에서 메모리 해제

- 전역변수(Global Variable)
   - '{}'밖에 선언된 변수(여러 지역 내에서 접근하여 사용할 수 있는 변수)
   
   - 프로그램 시작 시 데이터 영역에 메모리 할당
   
   - 프로그램 종료 시 데이터 영역에서 메모리 해제

- 정적변수(Static Variable)
   - 'static' 키워드를 붙여 변수 선언

   - 선언 시 초기화 필수

   - 데이터 영역을 사용하는 지역변수

   - 프로그램 시작 시 데이터 영역에 메모리 할당
   
   - 프로그램 종료 시 데이터 영역에서 메모리 해제

   - 정적변수의 이름이 같아도 선언된 파일이 다르면 데이터 영역의 서로 다른 메모리에 할당
      - 파일에서만 인식범위를 가짐
	  - 같은 이름이더라도 중복 정의 문제가 생기지 않음

   - 한 번 초기화가 되면 다음 번 접근 때 초기화 부분은 건너뛰어서 수행(단 한 번만 초기화 되는 것을 보장)

- 외부변수(Extern Variable)
   - 'extern' 키워드를 붙여 변수 선언

   - 선언 시 초기화 x

   - 외부변수로 선언한 변수는 따로 선언 및 초기화를 무조건 1번 해줘야 함(=메모리 할당. 초기화 부분이 없으면 링크 단계에서 오류) 
===================================================================================================================