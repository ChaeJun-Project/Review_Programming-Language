
//메모리 구조
===================================================================================================================
1)코드 영역

2)데이터 영역
- 프로그램 시작 시 생성
- 프로그램 종료 시 해제
- 전역, 정적(static)변수가 저장됨

3)힙 영역

4)스택 영역

===================================================================================================================


//함수 호출 순서
===================================================================================================================

===================================================================================================================


//라이브러리
===================================================================================================================
라이브러리
- 다른 프로그램들과 링크되기 위하여 존재하는 하나 이상의 서브루틴이나 함수들의 집합


라이브러리 사용이유
- 코드의 재사용

- 코드의 부품화 실현

- 소스를 제공하지 않아 기술 유출 방지(But 제공하는 경우도 있음)

- 사용자의 개발시간 단축
===================================================================================================================


//프로그램, 프로세스, 스레드
===================================================================================================================
프로그램
- 어떤 작업을 하기 위해 해야할 일들을 순서대로 나열한 것
- 컴퓨터에서 어떤 작업을 위해 실행할 수 있는 '정적인 상태'의 파일
- Windows의 경우 exe파일
- 프로그래밍 언어를 사용하여 올바른 수행절차를 표현해 놓은 명령어들의 집합

===================================================================================================================